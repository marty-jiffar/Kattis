import sys

# Problem statement from Kattis:
# 
# "You have just moved from Waterloo to a big city. The people here speak
# an incomprehensible dialect of a foreign language. Fortunately, you have 
# a dictionary to help you understand them.
#
# Input consists of up to 100000 dictionary entries, followed by a blank line,
# followed by a message of up to 100000 words. Each dictionary entry is a line
# containing an English word, followed by a space and a foreign language word. 
# No foreign word appears more than once in the dictionary. The message is a 
# sequence of words in the foreign language, one word on each line. Each word 
# in the input is a non-empty sequence of at most 10 lowercase letters.
# 
# Output is the message translated to English, one word per line. Foreign words 
# not in the dictionary should be translated as 'eh'."

def solve(word_pairs, words):
    # Replace [] with the list of translated words

    d = {}

    for i in range(len(word_pairs)):
        d[word_pairs[i][1]] = word_pairs[i][0]

    trans_list = []

    for word in words:
        if word not in d:
            trans_word = 'eh'
        else:
            trans_word = d[word]
        trans_list.append(trans_word)

    return trans_list

### The following code (provided by my professor) handles the input
### and output tasks for this problem.

if __name__ == "__main__":
    line = sys.stdin.readline().strip()

    word_pairs = []
    while line != "":
        word_pairs.append(line.split())
        line = sys.stdin.readline().strip()

    words = []
    for line in sys.stdin:
        words.append(line.strip())

    translated = solve(word_pairs, words)

    for w in translated:
        print(w)
